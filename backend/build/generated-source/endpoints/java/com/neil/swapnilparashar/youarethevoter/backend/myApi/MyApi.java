/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 1969-12-31 23:59:59 UTC)
 * on 2017-02-09 at 20:52:13 UTC 
 * Modify at your own risk.
 */

package com.neil.swapnilparashar.youarethevoter.backend.myApi;

/**
 * Service definition for MyApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MyApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class MyApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0 of the myApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://youarethevoter-1384.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "myApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public MyApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  MyApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "insertSQL".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link InsertSQL#execute()} method to invoke the remote operation.
   *
   * @param insertSQL
   * @return the request
   */
  public InsertSQL insertSQL(java.lang.String insertSQL) throws java.io.IOException {
    InsertSQL result = new InsertSQL(insertSQL);
    initialize(result);
    return result;
  }

  public class InsertSQL extends MyApiRequest<com.neil.swapnilparashar.youarethevoter.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "insertSQL";

    /**
     * Create a request for the method "insertSQL".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link InsertSQL#execute()} method to invoke the remote operation. <p>
     * {@link
     * InsertSQL#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param insertSQL
     * @since 1.13
     */
    protected InsertSQL(java.lang.String insertSQL) {
      super(MyApi.this, "POST", REST_PATH, null, com.neil.swapnilparashar.youarethevoter.backend.myApi.model.MyBean.class);
      this.insertSQL = com.google.api.client.util.Preconditions.checkNotNull(insertSQL, "Required parameter insertSQL must be specified.");
    }

    @Override
    public InsertSQL setAlt(java.lang.String alt) {
      return (InsertSQL) super.setAlt(alt);
    }

    @Override
    public InsertSQL setFields(java.lang.String fields) {
      return (InsertSQL) super.setFields(fields);
    }

    @Override
    public InsertSQL setKey(java.lang.String key) {
      return (InsertSQL) super.setKey(key);
    }

    @Override
    public InsertSQL setOauthToken(java.lang.String oauthToken) {
      return (InsertSQL) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertSQL setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertSQL) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertSQL setQuotaUser(java.lang.String quotaUser) {
      return (InsertSQL) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertSQL setUserIp(java.lang.String userIp) {
      return (InsertSQL) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String insertSQL;

    /**

     */
    public java.lang.String getInsertSQL() {
      return insertSQL;
    }

    public InsertSQL setInsertSQL(java.lang.String insertSQL) {
      this.insertSQL = insertSQL;
      return this;
    }

    @Override
    public InsertSQL set(String parameterName, Object value) {
      return (InsertSQL) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "loginUser".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link LoginUser#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User}
   * @return the request
   */
  public LoginUser loginUser(com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User content) throws java.io.IOException {
    LoginUser result = new LoginUser(content);
    initialize(result);
    return result;
  }

  public class LoginUser extends MyApiRequest<com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User> {

    private static final String REST_PATH = "loginUser";

    /**
     * Create a request for the method "loginUser".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link LoginUser#execute()} method to invoke the remote operation. <p>
     * {@link
     * LoginUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User}
     * @since 1.13
     */
    protected LoginUser(com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User content) {
      super(MyApi.this, "POST", REST_PATH, content, com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User.class);
    }

    @Override
    public LoginUser setAlt(java.lang.String alt) {
      return (LoginUser) super.setAlt(alt);
    }

    @Override
    public LoginUser setFields(java.lang.String fields) {
      return (LoginUser) super.setFields(fields);
    }

    @Override
    public LoginUser setKey(java.lang.String key) {
      return (LoginUser) super.setKey(key);
    }

    @Override
    public LoginUser setOauthToken(java.lang.String oauthToken) {
      return (LoginUser) super.setOauthToken(oauthToken);
    }

    @Override
    public LoginUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (LoginUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public LoginUser setQuotaUser(java.lang.String quotaUser) {
      return (LoginUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public LoginUser setUserIp(java.lang.String userIp) {
      return (LoginUser) super.setUserIp(userIp);
    }

    @Override
    public LoginUser set(String parameterName, Object value) {
      return (LoginUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "registerUser".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link RegisterUser#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User}
   * @return the request
   */
  public RegisterUser registerUser(com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User content) throws java.io.IOException {
    RegisterUser result = new RegisterUser(content);
    initialize(result);
    return result;
  }

  public class RegisterUser extends MyApiRequest<com.neil.swapnilparashar.youarethevoter.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "registerUser";

    /**
     * Create a request for the method "registerUser".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link RegisterUser#execute()} method to invoke the remote operation. <p>
     * {@link
     * RegisterUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User}
     * @since 1.13
     */
    protected RegisterUser(com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User content) {
      super(MyApi.this, "POST", REST_PATH, content, com.neil.swapnilparashar.youarethevoter.backend.myApi.model.MyBean.class);
    }

    @Override
    public RegisterUser setAlt(java.lang.String alt) {
      return (RegisterUser) super.setAlt(alt);
    }

    @Override
    public RegisterUser setFields(java.lang.String fields) {
      return (RegisterUser) super.setFields(fields);
    }

    @Override
    public RegisterUser setKey(java.lang.String key) {
      return (RegisterUser) super.setKey(key);
    }

    @Override
    public RegisterUser setOauthToken(java.lang.String oauthToken) {
      return (RegisterUser) super.setOauthToken(oauthToken);
    }

    @Override
    public RegisterUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RegisterUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RegisterUser setQuotaUser(java.lang.String quotaUser) {
      return (RegisterUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public RegisterUser setUserIp(java.lang.String userIp) {
      return (RegisterUser) super.setUserIp(userIp);
    }

    @Override
    public RegisterUser set(String parameterName, Object value) {
      return (RegisterUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "sayHi".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link SayHi#execute()} method to invoke the remote operation.
   *
   * @param name
   * @return the request
   */
  public SayHi sayHi(java.lang.String name) throws java.io.IOException {
    SayHi result = new SayHi(name);
    initialize(result);
    return result;
  }

  public class SayHi extends MyApiRequest<com.neil.swapnilparashar.youarethevoter.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "sayHi";

    /**
     * Create a request for the method "sayHi".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link SayHi#execute()} method to invoke the remote operation. <p> {@link
     * SayHi#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param name
     * @since 1.13
     */
    protected SayHi(java.lang.String name) {
      super(MyApi.this, "POST", REST_PATH, null, com.neil.swapnilparashar.youarethevoter.backend.myApi.model.MyBean.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
    }

    @Override
    public SayHi setAlt(java.lang.String alt) {
      return (SayHi) super.setAlt(alt);
    }

    @Override
    public SayHi setFields(java.lang.String fields) {
      return (SayHi) super.setFields(fields);
    }

    @Override
    public SayHi setKey(java.lang.String key) {
      return (SayHi) super.setKey(key);
    }

    @Override
    public SayHi setOauthToken(java.lang.String oauthToken) {
      return (SayHi) super.setOauthToken(oauthToken);
    }

    @Override
    public SayHi setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SayHi) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SayHi setQuotaUser(java.lang.String quotaUser) {
      return (SayHi) super.setQuotaUser(quotaUser);
    }

    @Override
    public SayHi setUserIp(java.lang.String userIp) {
      return (SayHi) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public SayHi setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @Override
    public SayHi set(String parameterName, Object value) {
      return (SayHi) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "selectSQL".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link SelectSQL#execute()} method to invoke the remote operation.
   *
   * @param selectSQL
   * @return the request
   */
  public SelectSQL selectSQL(java.lang.String selectSQL) throws java.io.IOException {
    SelectSQL result = new SelectSQL(selectSQL);
    initialize(result);
    return result;
  }

  public class SelectSQL extends MyApiRequest<com.neil.swapnilparashar.youarethevoter.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "selectSQL";

    /**
     * Create a request for the method "selectSQL".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link SelectSQL#execute()} method to invoke the remote operation. <p>
     * {@link
     * SelectSQL#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param selectSQL
     * @since 1.13
     */
    protected SelectSQL(java.lang.String selectSQL) {
      super(MyApi.this, "POST", REST_PATH, null, com.neil.swapnilparashar.youarethevoter.backend.myApi.model.MyBean.class);
      this.selectSQL = com.google.api.client.util.Preconditions.checkNotNull(selectSQL, "Required parameter selectSQL must be specified.");
    }

    @Override
    public SelectSQL setAlt(java.lang.String alt) {
      return (SelectSQL) super.setAlt(alt);
    }

    @Override
    public SelectSQL setFields(java.lang.String fields) {
      return (SelectSQL) super.setFields(fields);
    }

    @Override
    public SelectSQL setKey(java.lang.String key) {
      return (SelectSQL) super.setKey(key);
    }

    @Override
    public SelectSQL setOauthToken(java.lang.String oauthToken) {
      return (SelectSQL) super.setOauthToken(oauthToken);
    }

    @Override
    public SelectSQL setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SelectSQL) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SelectSQL setQuotaUser(java.lang.String quotaUser) {
      return (SelectSQL) super.setQuotaUser(quotaUser);
    }

    @Override
    public SelectSQL setUserIp(java.lang.String userIp) {
      return (SelectSQL) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String selectSQL;

    /**

     */
    public java.lang.String getSelectSQL() {
      return selectSQL;
    }

    public SelectSQL setSelectSQL(java.lang.String selectSQL) {
      this.selectSQL = selectSQL;
      return this;
    }

    @Override
    public SelectSQL set(String parameterName, Object value) {
      return (SelectSQL) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateUser".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link UpdateUser#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User}
   * @return the request
   */
  public UpdateUser updateUser(com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User content) throws java.io.IOException {
    UpdateUser result = new UpdateUser(content);
    initialize(result);
    return result;
  }

  public class UpdateUser extends MyApiRequest<com.neil.swapnilparashar.youarethevoter.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "updateUser";

    /**
     * Create a request for the method "updateUser".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link UpdateUser#execute()} method to invoke the remote operation. <p>
     * {@link
     * UpdateUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User}
     * @since 1.13
     */
    protected UpdateUser(com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User content) {
      super(MyApi.this, "PUT", REST_PATH, content, com.neil.swapnilparashar.youarethevoter.backend.myApi.model.MyBean.class);
    }

    @Override
    public UpdateUser setAlt(java.lang.String alt) {
      return (UpdateUser) super.setAlt(alt);
    }

    @Override
    public UpdateUser setFields(java.lang.String fields) {
      return (UpdateUser) super.setFields(fields);
    }

    @Override
    public UpdateUser setKey(java.lang.String key) {
      return (UpdateUser) super.setKey(key);
    }

    @Override
    public UpdateUser setOauthToken(java.lang.String oauthToken) {
      return (UpdateUser) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateUser setQuotaUser(java.lang.String quotaUser) {
      return (UpdateUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateUser setUserIp(java.lang.String userIp) {
      return (UpdateUser) super.setUserIp(userIp);
    }

    @Override
    public UpdateUser set(String parameterName, Object value) {
      return (UpdateUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateUserInterests".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link UpdateUserInterests#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User}
   * @return the request
   */
  public UpdateUserInterests updateUserInterests(com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User content) throws java.io.IOException {
    UpdateUserInterests result = new UpdateUserInterests(content);
    initialize(result);
    return result;
  }

  public class UpdateUserInterests extends MyApiRequest<com.neil.swapnilparashar.youarethevoter.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "updateUserInterests";

    /**
     * Create a request for the method "updateUserInterests".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link UpdateUserInterests#execute()} method to invoke the remote
     * operation. <p> {@link UpdateUserInterests#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User}
     * @since 1.13
     */
    protected UpdateUserInterests(com.neil.swapnilparashar.youarethevoter.backend.myApi.model.User content) {
      super(MyApi.this, "PUT", REST_PATH, content, com.neil.swapnilparashar.youarethevoter.backend.myApi.model.MyBean.class);
    }

    @Override
    public UpdateUserInterests setAlt(java.lang.String alt) {
      return (UpdateUserInterests) super.setAlt(alt);
    }

    @Override
    public UpdateUserInterests setFields(java.lang.String fields) {
      return (UpdateUserInterests) super.setFields(fields);
    }

    @Override
    public UpdateUserInterests setKey(java.lang.String key) {
      return (UpdateUserInterests) super.setKey(key);
    }

    @Override
    public UpdateUserInterests setOauthToken(java.lang.String oauthToken) {
      return (UpdateUserInterests) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateUserInterests setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateUserInterests) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateUserInterests setQuotaUser(java.lang.String quotaUser) {
      return (UpdateUserInterests) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateUserInterests setUserIp(java.lang.String userIp) {
      return (UpdateUserInterests) super.setUserIp(userIp);
    }

    @Override
    public UpdateUserInterests set(String parameterName, Object value) {
      return (UpdateUserInterests) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link MyApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link MyApi}. */
    @Override
    public MyApi build() {
      return new MyApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MyApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMyApiRequestInitializer(
        MyApiRequestInitializer myapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(myapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
